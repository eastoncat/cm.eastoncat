diff --git a/reservations_auto_checkin_out.module b/reservations_auto_checkin_out.module
index 08e9340..2a05e55 100755
--- a/reservations_auto_checkin_out.module
+++ b/reservations_auto_checkin_out.module
@@ -18,17 +18,27 @@ function reservations_auto_checkin_out_form_node_type_form_alter(&$form, &$form_
   
   $type = $form['old_type']['#value'];
 
-  //@TODO: do we need this?
   if ($type) {
     $nodes = reservations_nodes_for_type_count($type);
     $settings = reservations_load_item_settings($type);
   }
-     
-  $auto = db_query("SELECT * FROM {reservations_auto_checkin_out_node_type} WHERE type = :type", array(':type' => $type))->fetchField();
-   
-  //@TODO: This isn't right
-  $form['reservations']['reservations_auto_checkin'] = $auto->checkin;
-  $form['reservations']['reservations_auto_checkout'] = $auto->checkout;
+  	
+  $form['reservations']['reservations_autocheckout'] = array(
+      '#type' => 'checkbox',
+      '#title' => t('Auto checkout'),
+      '#default_value' => isset($settings->reservations_autocheckout) ? $settings->reservations_autocheckout : NULL,
+      '#description' => t('Automatically check this item out when the Reservation starts.'),
+  );
+  
+  $form['reservations']['reservations_autocheckin'] = array(
+      '#type' => 'checkbox',
+      '#title' => t('Auto checkin'),
+      '#default_value' => isset($settings->reservations_autocheckin) ? $settings->reservations_autocheckin : NULL,
+      '#description' => t('Automatically check this item in when the Reservation ends.'),
+  );
+
+  reservations_add_settings_form($form, $form_state);
+ 
   $form['#validate'][] = 'reservations_auto_checkin_out_node_type_save_validate';
 
 }
@@ -50,14 +60,14 @@ function reservations_auto_checkin_out_node_type_save_validate($form, &$form_sta
   if ($values['old_type']) {
   
     //update only if the type already exists
-    $type = db_query("SELECT tids FROM {reservations_auto_checkin_out_node_type} WHERE type = :type", array(':type' => $values['old_type']))->fetchField();
+    $type = db_query("SELECT type FROM {reservations_auto_checkin_out_node_type} WHERE type = :type", array(':type' => $values['old_type']))->fetchField();
     
     if ($type) {
       $num_updated = db_update('reservations_auto_checkin_out_node_type') 
       ->fields(array(
       'type' => $values['old_type'],
-      'checkin' => $values['reservations_auto_checkin'],
-      'checkout' => $values['reservations_auto_checkout'],
+      'checkin' => $values['reservations_autocheckin'],
+      'checkout' => $values['reservations_autocheckout'],
       ))
       ->condition('type', $values['old_type'], '=')
       ->execute();
@@ -65,8 +75,8 @@ function reservations_auto_checkin_out_node_type_save_validate($form, &$form_sta
 	  $result = db_insert('reservations_auto_checkin_out_node_type') 
       ->fields(array(
       'type' => $values['old_type'],
-      'checkin' => $values['reservations_auto_checkin'],
-      'checkout' => $values['reservations_auto_checkout'],
+      'checkin' => $values['reservations_autocheckin'],
+      'checkout' => $values['reservations_autocheckout'],
        ))
        ->execute(); 
     }
@@ -75,8 +85,8 @@ function reservations_auto_checkin_out_node_type_save_validate($form, &$form_sta
     $result = db_insert('reservations_auto_checkin_out_node_type') 
     ->fields(array(
     'type' => $values['type'],
-    'checkin' => $values['reservations_auto_checkin'],
-    'checkout' => $values['reservations_auto_checkout'],
+    'checkin' => $values['reservations_autocheckin'],
+    'checkout' => $values['reservations_autocheckout'],
      ))
      ->execute();
   }  
@@ -114,16 +124,120 @@ function reservations_auto_checkin_out_node_type_sync() {
   }
 }
 
+
+/**
+ * @statuses The statuses that we want to check for
+ * @start The start date of the reservation
+ * @end The end date of the reservation
+ * @out A boolean to determine the operator for the end date WHERE clause
+ * Provides the actual functionality for changing the status of a reservation automatically to checked in or checked out
+ */
+function reservations_auto_checkin_out_by_status_in_timespan($statuses = array(), $start = NULL, $end = NULL, $out = FALSE) {
+
+  // Determine table and columns the date data is stored in.
+  $field = field_info_field('field_reservations_date');
+  $table           = key($field['storage']['details']['sql']['FIELD_LOAD_CURRENT']);
+  $column_start_date = $field['storage']['details']['sql']['FIELD_LOAD_CURRENT'][$table]['value'];
+  $column_end_date = $field['storage']['details']['sql']['FIELD_LOAD_CURRENT'][$table]['value2'];
+
+  $where = array();
+  $args = array();
+
+  if (!empty($statuses)) {
+    $status_where = array();
+    foreach ($statuses as $i => $status) {
+      $key = ':reservations_reservation_status' . $i;
+      $args[$key] = $i;
+      $status_where[] = 'mr.reservations_reservation_status = ' .$key;
+      $args[$key] = $status;
+    }
+    $where[] = '(' . implode(' OR ', $status_where) . ')';
+  }
+
+  if ($start) {
+    $args[':start'] = $start;
+    $where[] = "ct.$column_start_date <= :start";
+  }
+  if ($end) {
+    $args[':end'] = $end;
+    if($out == FALSE){
+    $where[] = "ct.$column_end_date > :end";
+    }else{
+    $where[] = "ct.$column_end_date <= :end";    
+    }
+  }
+
+  $where = count($where) ? implode(' AND ', $where) : '';
+
+  $nodes = array();
+  
+  // Select reservation nodes where all reserved items and resources are autocheckout.
+  $query = db_select('node', 'n');
+  $query->join($table, 'ct', 'ct.revision_id = n.vid');
+  $query->join('reservations_reservation', 'mr', 'n.vid = mr.vid');
+  $query
+    ->fields('n', array('nid'));
+  $query->where($where, $args);
+
+  $result = $query->execute();
+  foreach ($result as $record) {
+    $reservation_nid = $record->nid;
+    $nodes[$reservation_nid] = $reservation_nid;
+  }
+
+  return $nodes;
+}
+
 function reservations_auto_checkin_out_cron() {
   // 2009-05-22 20:45:00
   $time = gmdate('Y-m-j H:i:s');
- 
-  $nodes = reservations_db_reservations_by_status_in_timespan(array(RESERVATIONS_STATUS_UNCONFIRMED, RESERVATIONS_STATUS_PENDING), $time, $time);
   
-  foreach (array_keys($nodes) as $reservation_nid) {
- 
-     $node->reservations_reservation_status = RESERVATIONS_STATUS_NO_SHOW;
-     node_save($node);
+  // Checking Items Out
+  $nodes = reservations_auto_checkin_out_by_status_in_timespan(array(RESERVATIONS_STATUS_PENDING), $time, $time);
+  if(!empty($nodes)){
+    foreach (array_keys($nodes) as $reservation_nid) {
+      $reservation = node_load($reservation_nid);
+
+      //check child items of that reservations for autocheckout
+      if(!empty($reservaton)){
+        foreach ($reservaton->reservations_reservation_items as $item) {
+          $node = node_load($item['reservations_item_nid']);
+          if (!$node or !$node->reservations_autocheckout) {
+            // skip out to the next reservation.
+            continue 2;
+          }
+        }
+      }
+
+      //after checking all of the autocheckout settings for all the child items, are they all autocheckout?
+      watchdog('reservations', "Setting node " . $reservation_nid . " to checked out");
+      $reservation->reservations_reservation_status = RESERVATIONS_STATUS_CHECKED_OUT;
+      node_save($reservation);
+    }
   }
-}
+  
+  // Cheacking Items In
+  $nodes = reservations_auto_checkin_out_by_status_in_timespan(array(RESERVATIONS_STATUS_CHECKED_OUT), NULL, $time, TRUE);
+  
+  if(!empty($nodes)){
+    foreach (array_keys($nodes) as $reservation_nid) {
+
+      //check child items of that reservations for autocheckin 
+      $reservation = node_load($reservation_nid);
+      if(!empty($reservaton)){
+        foreach ($reservaton->reservations_reservation_items as $item) {
+          $node = node_load($item['reservations_item_nid']);
+          if (!$node or !$node->reservations_autocheckin) {
+            // skip out to the next reservation.
+            continue 2;
+          }
+        }
+      }
 
+      //after checking all of the autocheckout settings for all the child items, are they all autocheckout?
+      watchdog('reservations', "Setting node " . $reservation_nid . " to checked in");
+      $reservation->reservations_reservation_status = RESERVATIONS_STATUS_CHECKED_IN;
+      node_save($reservation);
+    }
+  }
+}
\ No newline at end of file
